// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: karpenter.proto

package karpenterprovidergrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName    string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	Clustername string `protobuf:"bytes,2,opt,name=clustername,proto3" json:"clustername,omitempty"`
}

func (x *ListInstancesRequest) Reset() {
	*x = ListInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesRequest) ProtoMessage() {}

func (x *ListInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListInstancesRequest) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{0}
}

func (x *ListInstancesRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *ListInstancesRequest) GetClustername() string {
	if x != nil {
		return x.Clustername
	}
	return ""
}

type ListInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instanseids []string `protobuf:"bytes,1,rep,name=instanseids,proto3" json:"instanseids,omitempty"`
}

func (x *ListInstancesResponse) Reset() {
	*x = ListInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResponse) ProtoMessage() {}

func (x *ListInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListInstancesResponse) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{1}
}

func (x *ListInstancesResponse) GetInstanseids() []string {
	if x != nil {
		return x.Instanseids
	}
	return nil
}

type DeleteInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName    string   `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	Instanseids []string `protobuf:"bytes,2,rep,name=instanseids,proto3" json:"instanseids,omitempty"`
}

func (x *DeleteInstancesRequest) Reset() {
	*x = DeleteInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstancesRequest) ProtoMessage() {}

func (x *DeleteInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstancesRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstancesRequest) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteInstancesRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *DeleteInstancesRequest) GetInstanseids() []string {
	if x != nil {
		return x.Instanseids
	}
	return nil
}

type DeleteInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInstancesResponse) Reset() {
	*x = DeleteInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstancesResponse) ProtoMessage() {}

func (x *DeleteInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstancesResponse.ProtoReflect.Descriptor instead.
func (*DeleteInstancesResponse) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{3}
}

type Requirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Operator string   `protobuf:"bytes,2,opt,name=Operator,proto3" json:"Operator,omitempty"`
	Values   []string `protobuf:"bytes,3,rep,name=Values,proto3" json:"Values,omitempty"`
}

func (x *Requirement) Reset() {
	*x = Requirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Requirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requirement) ProtoMessage() {}

func (x *Requirement) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requirement.ProtoReflect.Descriptor instead.
func (*Requirement) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{4}
}

func (x *Requirement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Requirement) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Requirement) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type AddInstancesSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroups  map[string]string `protobuf:"bytes,1,rep,name=SecurityGroups,proto3" json:"SecurityGroups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Subnets         map[string]string `protobuf:"bytes,2,rep,name=Subnets,proto3" json:"Subnets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ami             map[string]string `protobuf:"bytes,3,rep,name=Ami,proto3" json:"Ami,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InstanceProfile string            `protobuf:"bytes,4,opt,name=InstanceProfile,proto3" json:"InstanceProfile,omitempty"`
	LaunchTemplate  *string           `protobuf:"bytes,5,opt,name=LaunchTemplate,proto3,oneof" json:"LaunchTemplate,omitempty"`
	Requirements    []*Requirement    `protobuf:"bytes,6,rep,name=Requirements,proto3" json:"Requirements,omitempty"`
	Resources       map[string]string `protobuf:"bytes,7,rep,name=Resources,proto3" json:"Resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddInstancesSpec) Reset() {
	*x = AddInstancesSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstancesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstancesSpec) ProtoMessage() {}

func (x *AddInstancesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstancesSpec.ProtoReflect.Descriptor instead.
func (*AddInstancesSpec) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{5}
}

func (x *AddInstancesSpec) GetSecurityGroups() map[string]string {
	if x != nil {
		return x.SecurityGroups
	}
	return nil
}

func (x *AddInstancesSpec) GetSubnets() map[string]string {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *AddInstancesSpec) GetAmi() map[string]string {
	if x != nil {
		return x.Ami
	}
	return nil
}

func (x *AddInstancesSpec) GetInstanceProfile() string {
	if x != nil {
		return x.InstanceProfile
	}
	return ""
}

func (x *AddInstancesSpec) GetLaunchTemplate() string {
	if x != nil && x.LaunchTemplate != nil {
		return *x.LaunchTemplate
	}
	return ""
}

func (x *AddInstancesSpec) GetRequirements() []*Requirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *AddInstancesSpec) GetResources() map[string]string {
	if x != nil {
		return x.Resources
	}
	return nil
}

type AddInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName string            `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	Count    int32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Spec     *AddInstancesSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *AddInstancesRequest) Reset() {
	*x = AddInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstancesRequest) ProtoMessage() {}

func (x *AddInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstancesRequest.ProtoReflect.Descriptor instead.
func (*AddInstancesRequest) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{6}
}

func (x *AddInstancesRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *AddInstancesRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AddInstancesRequest) GetSpec() *AddInstancesSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type AddInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instanseids []string `protobuf:"bytes,1,rep,name=instanseids,proto3" json:"instanseids,omitempty"`
	Reason      string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AddInstancesResponse) Reset() {
	*x = AddInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_karpenter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstancesResponse) ProtoMessage() {}

func (x *AddInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_karpenter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstancesResponse.ProtoReflect.Descriptor instead.
func (*AddInstancesResponse) Descriptor() ([]byte, []int) {
	return file_karpenter_proto_rawDescGZIP(), []int{7}
}

func (x *AddInstancesResponse) GetInstanseids() []string {
	if x != nil {
		return x.Instanseids
	}
	return nil
}

func (x *AddInstancesResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_karpenter_proto protoreflect.FileDescriptor

var file_karpenter_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x22, 0x54, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x73, 0x65, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x73, 0x65, 0x69, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x65, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x65, 0x69, 0x64,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0x88, 0x06, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x63, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x4e, 0x0a, 0x07, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b,
	0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x03, 0x41,
	0x6d, 0x69, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x41, 0x6d, 0x69, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x41, 0x6d, 0x69, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b,
	0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x54,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x41, 0x6d, 0x69, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x84, 0x01, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x22, 0x50, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x65, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x65, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0xd9, 0x02, 0x0a, 0x10, 0x4b, 0x61, 0x72, 0x70, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x6b, 0x61,
	0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x70, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x60, 0x5a, 0x5e, 0x70, 0x6c, 0x61, 0x79, 0x72, 0x69, 0x78, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x74, 0x2f, 0x6e, 0x6f, 0x6d, 0x61, 0x64, 0x2d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2d, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x76, 0x32, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x6b, 0x61, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67, 0x72, 0x70, 0x63, 0x3b, 0x6b, 0x61,
	0x72, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_karpenter_proto_rawDescOnce sync.Once
	file_karpenter_proto_rawDescData = file_karpenter_proto_rawDesc
)

func file_karpenter_proto_rawDescGZIP() []byte {
	file_karpenter_proto_rawDescOnce.Do(func() {
		file_karpenter_proto_rawDescData = protoimpl.X.CompressGZIP(file_karpenter_proto_rawDescData)
	})
	return file_karpenter_proto_rawDescData
}

var file_karpenter_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_karpenter_proto_goTypes = []interface{}{
	(*ListInstancesRequest)(nil),    // 0: karpenterprovidergrpc.ListInstancesRequest
	(*ListInstancesResponse)(nil),   // 1: karpenterprovidergrpc.ListInstancesResponse
	(*DeleteInstancesRequest)(nil),  // 2: karpenterprovidergrpc.DeleteInstancesRequest
	(*DeleteInstancesResponse)(nil), // 3: karpenterprovidergrpc.DeleteInstancesResponse
	(*Requirement)(nil),             // 4: karpenterprovidergrpc.Requirement
	(*AddInstancesSpec)(nil),        // 5: karpenterprovidergrpc.AddInstancesSpec
	(*AddInstancesRequest)(nil),     // 6: karpenterprovidergrpc.AddInstancesRequest
	(*AddInstancesResponse)(nil),    // 7: karpenterprovidergrpc.AddInstancesResponse
	nil,                             // 8: karpenterprovidergrpc.AddInstancesSpec.SecurityGroupsEntry
	nil,                             // 9: karpenterprovidergrpc.AddInstancesSpec.SubnetsEntry
	nil,                             // 10: karpenterprovidergrpc.AddInstancesSpec.AmiEntry
	nil,                             // 11: karpenterprovidergrpc.AddInstancesSpec.ResourcesEntry
}
var file_karpenter_proto_depIdxs = []int32{
	8,  // 0: karpenterprovidergrpc.AddInstancesSpec.SecurityGroups:type_name -> karpenterprovidergrpc.AddInstancesSpec.SecurityGroupsEntry
	9,  // 1: karpenterprovidergrpc.AddInstancesSpec.Subnets:type_name -> karpenterprovidergrpc.AddInstancesSpec.SubnetsEntry
	10, // 2: karpenterprovidergrpc.AddInstancesSpec.Ami:type_name -> karpenterprovidergrpc.AddInstancesSpec.AmiEntry
	4,  // 3: karpenterprovidergrpc.AddInstancesSpec.Requirements:type_name -> karpenterprovidergrpc.Requirement
	11, // 4: karpenterprovidergrpc.AddInstancesSpec.Resources:type_name -> karpenterprovidergrpc.AddInstancesSpec.ResourcesEntry
	5,  // 5: karpenterprovidergrpc.AddInstancesRequest.spec:type_name -> karpenterprovidergrpc.AddInstancesSpec
	0,  // 6: karpenterprovidergrpc.KarpenterService.ListInstances:input_type -> karpenterprovidergrpc.ListInstancesRequest
	6,  // 7: karpenterprovidergrpc.KarpenterService.AddInstances:input_type -> karpenterprovidergrpc.AddInstancesRequest
	2,  // 8: karpenterprovidergrpc.KarpenterService.RemoveInstances:input_type -> karpenterprovidergrpc.DeleteInstancesRequest
	1,  // 9: karpenterprovidergrpc.KarpenterService.ListInstances:output_type -> karpenterprovidergrpc.ListInstancesResponse
	7,  // 10: karpenterprovidergrpc.KarpenterService.AddInstances:output_type -> karpenterprovidergrpc.AddInstancesResponse
	3,  // 11: karpenterprovidergrpc.KarpenterService.RemoveInstances:output_type -> karpenterprovidergrpc.DeleteInstancesResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_karpenter_proto_init() }
func file_karpenter_proto_init() {
	if File_karpenter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_karpenter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Requirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstancesSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_karpenter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_karpenter_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_karpenter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_karpenter_proto_goTypes,
		DependencyIndexes: file_karpenter_proto_depIdxs,
		MessageInfos:      file_karpenter_proto_msgTypes,
	}.Build()
	File_karpenter_proto = out.File
	file_karpenter_proto_rawDesc = nil
	file_karpenter_proto_goTypes = nil
	file_karpenter_proto_depIdxs = nil
}
